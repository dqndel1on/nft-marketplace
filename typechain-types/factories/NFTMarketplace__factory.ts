/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../NFTMarketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526658d15e1762800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061180e806100746000396000f3fe6080604052600436106100555760003560e01c80630f08efe01461005a57806312e8558514610085578063202e3740146100b057806358eb2df5146100db578063c23b139e146100f7578063f064c32e14610113575b600080fd5b34801561006657600080fd5b5061006f61013e565b60405161007c919061130f565b60405180910390f35b34801561009157600080fd5b5061009a61041e565b6040516100a79190611340565b60405180910390f35b3480156100bc57600080fd5b506100c5610428565b6040516100d2919061130f565b60405180910390f35b6100f560048036038101906100f091906113b8565b61077d565b005b610111600480360381019061010c919061140b565b610a89565b005b34801561011f57600080fd5b50610128610d42565b604051610135919061130f565b60405180910390f35b6060600061014c6001611097565b9050600061015a6002611097565b6101646001611097565b61016e919061147a565b90506000808267ffffffffffffffff81111561018d5761018c6114ae565b5b6040519080825280602002602001820160405280156101c657816020015b6101b36110bb565b8152602001906001900390816101ab5790505b50905060005b8481101561041357600073ffffffffffffffffffffffffffffffffffffffff16600560006001846101fd91906114dd565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104005760006005600060018461025e91906114dd565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508486815181106103e3576103e2611533565b5b60200260200101819052506001856103fb91906114dd565b945050505b808061040b90611562565b9150506101cc565b508094505050505090565b6000600454905090565b606060006104366001611097565b905060008060005b838110156104df573373ffffffffffffffffffffffffffffffffffffffff166005600060018461046e91906114dd565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104cc576001836104c991906114dd565b92505b80806104d790611562565b91505061043e565b5060008267ffffffffffffffff8111156104fc576104fb6114ae565b5b60405190808252806020026020018201604052801561053557816020015b6105226110bb565b81526020019060019003908161051a5790505b50905060005b84811015610772573373ffffffffffffffffffffffffffffffffffffffff166005600060018461056b91906114dd565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561075f576000600560006001846105cc91906114dd565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505084868151811061075157610750611533565b5b602002602001018190525050505b808061076a90611562565b91505061053b565b508094505050505090565b600260005414156107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90611608565b60405180910390fd5b60026000819055506000811161080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590611674565b60405180910390fd5b6004543414610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084990611706565b60405180910390fd5b61085c60016110a5565b60006108686001611097565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610a4993929190611735565b600060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b50505050506001600081905550505050565b60026000541415610acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac690611608565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414610b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b46906117b8565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610bcb573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610c0993929190611735565b600060405180830381600087803b158015610c2357600080fd5b505af1158015610c37573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060060160006101000a81548160ff021916908315150217905550610cc960026110a5565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610d33573d6000803e3d6000fd5b50505060016000819055505050565b60606000610d506001611097565b905060008060005b83811015610df9573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610d8891906114dd565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610de657600183610de391906114dd565b92505b8080610df190611562565b915050610d58565b5060008267ffffffffffffffff811115610e1657610e156114ae565b5b604051908082528060200260200182016040528015610e4f57816020015b610e3c6110bb565b815260200190600190039081610e345790505b50905060005b8481101561108c573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610e8591906114dd565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561107957600060056000600184610ee691906114dd565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505084868151811061106b5761106a611533565b5b602002602001018190525050505b808061108490611562565b915050610e55565b508094505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61117b81611168565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111ac82611181565b9050919050565b6111bc816111a1565b82525050565b60006111cd82611181565b9050919050565b6111dd816111c2565b82525050565b60008115159050919050565b6111f8816111e3565b82525050565b60e0820160008201516112146000850182611172565b50602082015161122760208501826111b3565b50604082015161123a6040850182611172565b50606082015161124d60608501826111d4565b50608082015161126060808501826111d4565b5060a082015161127360a0850182611172565b5060c082015161128660c08501826111ef565b50505050565b600061129883836111fe565b60e08301905092915050565b6000602082019050919050565b60006112bc8261113c565b6112c68185611147565b93506112d183611158565b8060005b838110156113025781516112e9888261128c565b97506112f4836112a4565b9250506001810190506112d5565b5085935050505092915050565b6000602082019050818103600083015261132981846112b1565b905092915050565b61133a81611168565b82525050565b60006020820190506113556000830184611331565b92915050565b600080fd5b611369816111a1565b811461137457600080fd5b50565b60008135905061138681611360565b92915050565b61139581611168565b81146113a057600080fd5b50565b6000813590506113b28161138c565b92915050565b6000806000606084860312156113d1576113d061135b565b5b60006113df86828701611377565b93505060206113f0868287016113a3565b9250506040611401868287016113a3565b9150509250925092565b600080604083850312156114225761142161135b565b5b600061143085828601611377565b9250506020611441858286016113a3565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061148582611168565b915061149083611168565b9250828210156114a3576114a261144b565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006114e882611168565b91506114f383611168565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115285761152761144b565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061156d82611168565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115a05761159f61144b565b5b600182019050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006115f2601f836115ab565b91506115fd826115bc565b602082019050919050565b60006020820190508181036000830152611621816115e5565b9050919050565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b600061165e601c836115ab565b915061166982611628565b602082019050919050565b6000602082019050818103600083015261168d81611651565b9050919050565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b60006116f06024836115ab565b91506116fb82611694565b604082019050919050565b6000602082019050818103600083015261171f816116e3565b9050919050565b61172f816111a1565b82525050565b600060608201905061174a6000830186611726565b6117576020830185611726565b6117646040830184611331565b949350505050565b7f506c65617365207375626d6974207468652061736b696e672070726963650000600082015250565b60006117a2601e836115ab565b91506117ad8261176c565b602082019050919050565b600060208201905081810360008301526117d181611795565b905091905056fea2646970667358221220f7b288a1bbc528da9f30fcd650978f0b3ccdbef39afa113d10c8c5c5c93cca3064736f6c634300080a0033";

type NFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketplace__factory extends ContractFactory {
  constructor(...args: NFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NFTMarketplace";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMarketplace> {
    return super.deploy(overrides || {}) as Promise<NFTMarketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMarketplace {
    return super.attach(address) as NFTMarketplace;
  }
  connect(signer: Signer): NFTMarketplace__factory {
    return super.connect(signer) as NFTMarketplace__factory;
  }
  static readonly contractName: "NFTMarketplace";
  public readonly contractName: "NFTMarketplace";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new utils.Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketplace;
  }
}
